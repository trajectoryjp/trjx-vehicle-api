// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: proto/mav_controller_outside/trjxgcs.proto

package trjxmavlink

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	trjxmission "proto_go/trjxmission"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FlightStateType int32

const (
	FlightStateType_Unknown  FlightStateType = 0
	FlightStateType_Stopped  FlightStateType = 1 // disarming
	FlightStateType_OnGround FlightStateType = 2 // arming
	FlightStateType_InAir    FlightStateType = 3 // arming
)

// Enum value maps for FlightStateType.
var (
	FlightStateType_name = map[int32]string{
		0: "Unknown",
		1: "Stopped",
		2: "OnGround",
		3: "InAir",
	}
	FlightStateType_value = map[string]int32{
		"Unknown":  0,
		"Stopped":  1,
		"OnGround": 2,
		"InAir":    3,
	}
)

func (x FlightStateType) Enum() *FlightStateType {
	p := new(FlightStateType)
	*p = x
	return p
}

func (x FlightStateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlightStateType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mav_controller_outside_trjxgcs_proto_enumTypes[0].Descriptor()
}

func (FlightStateType) Type() protoreflect.EnumType {
	return &file_proto_mav_controller_outside_trjxgcs_proto_enumTypes[0]
}

func (x FlightStateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FlightStateType.Descriptor instead.
func (FlightStateType) EnumDescriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{0}
}

type GCToken_Code int32

const (
	GCToken_Complete       GCToken_Code = 0 // ログイン成功
	GCToken_Invalid        GCToken_Code = 3 // パスワードが無効
	GCToken_UnavailableUAV GCToken_Code = 4 // 許容されない機体（他組織など）
	GCToken_InternalError  GCToken_Code = 10
)

// Enum value maps for GCToken_Code.
var (
	GCToken_Code_name = map[int32]string{
		0:  "Complete",
		3:  "Invalid",
		4:  "UnavailableUAV",
		10: "InternalError",
	}
	GCToken_Code_value = map[string]int32{
		"Complete":       0,
		"Invalid":        3,
		"UnavailableUAV": 4,
		"InternalError":  10,
	}
)

func (x GCToken_Code) Enum() *GCToken_Code {
	p := new(GCToken_Code)
	*p = x
	return p
}

func (x GCToken_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GCToken_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mav_controller_outside_trjxgcs_proto_enumTypes[1].Descriptor()
}

func (GCToken_Code) Type() protoreflect.EnumType {
	return &file_proto_mav_controller_outside_trjxgcs_proto_enumTypes[1]
}

func (x GCToken_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GCToken_Code.Descriptor instead.
func (GCToken_Code) EnumDescriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{1, 0}
}

type PositionDef_AltitudeAttrDef int32

const (
	PositionDef_Unknown    PositionDef_AltitudeAttrDef = 0
	PositionDef_Ellipsoide PositionDef_AltitudeAttrDef = 1 // 未対応
	PositionDef_MSL        PositionDef_AltitudeAttrDef = 2 // 当面MSLのみ
	PositionDef_AGL        PositionDef_AltitudeAttrDef = 3 // 未対応
)

// Enum value maps for PositionDef_AltitudeAttrDef.
var (
	PositionDef_AltitudeAttrDef_name = map[int32]string{
		0: "Unknown",
		1: "Ellipsoide",
		2: "MSL",
		3: "AGL",
	}
	PositionDef_AltitudeAttrDef_value = map[string]int32{
		"Unknown":    0,
		"Ellipsoide": 1,
		"MSL":        2,
		"AGL":        3,
	}
)

func (x PositionDef_AltitudeAttrDef) Enum() *PositionDef_AltitudeAttrDef {
	p := new(PositionDef_AltitudeAttrDef)
	*p = x
	return p
}

func (x PositionDef_AltitudeAttrDef) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PositionDef_AltitudeAttrDef) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mav_controller_outside_trjxgcs_proto_enumTypes[2].Descriptor()
}

func (PositionDef_AltitudeAttrDef) Type() protoreflect.EnumType {
	return &file_proto_mav_controller_outside_trjxgcs_proto_enumTypes[2]
}

func (x PositionDef_AltitudeAttrDef) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PositionDef_AltitudeAttrDef.Descriptor instead.
func (PositionDef_AltitudeAttrDef) EnumDescriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{6, 0}
}

type TrjxVehicleReceiveCommandHandling_ResponseDef_ResultDef int32

const (
	TrjxVehicleReceiveCommandHandling_ResponseDef_Complete TrjxVehicleReceiveCommandHandling_ResponseDef_ResultDef = 0
	TrjxVehicleReceiveCommandHandling_ResponseDef_Continue TrjxVehicleReceiveCommandHandling_ResponseDef_ResultDef = 1 // コマンド実行中
	TrjxVehicleReceiveCommandHandling_ResponseDef_Error    TrjxVehicleReceiveCommandHandling_ResponseDef_ResultDef = 20
)

// Enum value maps for TrjxVehicleReceiveCommandHandling_ResponseDef_ResultDef.
var (
	TrjxVehicleReceiveCommandHandling_ResponseDef_ResultDef_name = map[int32]string{
		0:  "Complete",
		1:  "Continue",
		20: "Error",
	}
	TrjxVehicleReceiveCommandHandling_ResponseDef_ResultDef_value = map[string]int32{
		"Complete": 0,
		"Continue": 1,
		"Error":    20,
	}
)

func (x TrjxVehicleReceiveCommandHandling_ResponseDef_ResultDef) Enum() *TrjxVehicleReceiveCommandHandling_ResponseDef_ResultDef {
	p := new(TrjxVehicleReceiveCommandHandling_ResponseDef_ResultDef)
	*p = x
	return p
}

func (x TrjxVehicleReceiveCommandHandling_ResponseDef_ResultDef) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrjxVehicleReceiveCommandHandling_ResponseDef_ResultDef) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mav_controller_outside_trjxgcs_proto_enumTypes[3].Descriptor()
}

func (TrjxVehicleReceiveCommandHandling_ResponseDef_ResultDef) Type() protoreflect.EnumType {
	return &file_proto_mav_controller_outside_trjxgcs_proto_enumTypes[3]
}

func (x TrjxVehicleReceiveCommandHandling_ResponseDef_ResultDef) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrjxVehicleReceiveCommandHandling_ResponseDef_ResultDef.Descriptor instead.
func (TrjxVehicleReceiveCommandHandling_ResponseDef_ResultDef) EnumDescriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{11, 0, 0}
}

type ConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AircraftID string `protobuf:"bytes,1,opt,name=AircraftID,proto3" json:"AircraftID,omitempty"` // 自組織の機体に限る
	// Types that are assignable to Identification:
	//	*ConnectRequest_UserID
	//	*ConnectRequest_OrganizationID
	Identification isConnectRequest_Identification `protobuf_oneof:"Identification"`
	Password       string                          `protobuf:"bytes,8,opt,name=Password,proto3" json:"Password,omitempty"`
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectRequest) GetAircraftID() string {
	if x != nil {
		return x.AircraftID
	}
	return ""
}

func (m *ConnectRequest) GetIdentification() isConnectRequest_Identification {
	if m != nil {
		return m.Identification
	}
	return nil
}

func (x *ConnectRequest) GetUserID() string {
	if x, ok := x.GetIdentification().(*ConnectRequest_UserID); ok {
		return x.UserID
	}
	return ""
}

func (x *ConnectRequest) GetOrganizationID() string {
	if x, ok := x.GetIdentification().(*ConnectRequest_OrganizationID); ok {
		return x.OrganizationID
	}
	return ""
}

func (x *ConnectRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type isConnectRequest_Identification interface {
	isConnectRequest_Identification()
}

type ConnectRequest_UserID struct {
	UserID string `protobuf:"bytes,2,opt,name=UserID,proto3,oneof"` // TRJXユーザID
}

type ConnectRequest_OrganizationID struct {
	OrganizationID string `protobuf:"bytes,3,opt,name=OrganizationID,proto3,oneof"` // TRJX組織ID。未実装
}

func (*ConnectRequest_UserID) isConnectRequest_Identification() {}

func (*ConnectRequest_OrganizationID) isConnectRequest_Identification() {}

type GCToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result GCToken_Code `protobuf:"varint,1,opt,name=Result,proto3,enum=trjxmavlink.GCToken_Code" json:"Result,omitempty"`
	Token  string       `protobuf:"bytes,2,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *GCToken) Reset() {
	*x = GCToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCToken) ProtoMessage() {}

func (x *GCToken) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCToken.ProtoReflect.Descriptor instead.
func (*GCToken) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{1}
}

func (x *GCToken) GetResult() GCToken_Code {
	if x != nil {
		return x.Result
	}
	return GCToken_Complete
}

func (x *GCToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type TrjxVehicleMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//string VehicleID = 1 ; // TRJX UAVIDに一致する
	//
	// Types that are assignable to MessageType:
	//	*TrjxVehicleMessage_Heartbeat
	MessageType isTrjxVehicleMessage_MessageType `protobuf_oneof:"MessageType"`
}

func (x *TrjxVehicleMessage) Reset() {
	*x = TrjxVehicleMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrjxVehicleMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrjxVehicleMessage) ProtoMessage() {}

func (x *TrjxVehicleMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrjxVehicleMessage.ProtoReflect.Descriptor instead.
func (*TrjxVehicleMessage) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{2}
}

func (m *TrjxVehicleMessage) GetMessageType() isTrjxVehicleMessage_MessageType {
	if m != nil {
		return m.MessageType
	}
	return nil
}

func (x *TrjxVehicleMessage) GetHeartbeat() *Empty {
	if x, ok := x.GetMessageType().(*TrjxVehicleMessage_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

type isTrjxVehicleMessage_MessageType interface {
	isTrjxVehicleMessage_MessageType()
}

type TrjxVehicleMessage_Heartbeat struct {
	Heartbeat *Empty `protobuf:"bytes,1,opt,name=Heartbeat,proto3,oneof"`
}

func (*TrjxVehicleMessage_Heartbeat) isTrjxVehicleMessage_MessageType() {}

type TrjxVehicleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TrjxVehicleRequest) Reset() {
	*x = TrjxVehicleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrjxVehicleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrjxVehicleRequest) ProtoMessage() {}

func (x *TrjxVehicleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrjxVehicleRequest.ProtoReflect.Descriptor instead.
func (*TrjxVehicleRequest) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{3}
}

type TrjxVehicleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TrjxVehicleResponse) Reset() {
	*x = TrjxVehicleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrjxVehicleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrjxVehicleResponse) ProtoMessage() {}

func (x *TrjxVehicleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrjxVehicleResponse.ProtoReflect.Descriptor instead.
func (*TrjxVehicleResponse) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{4}
}

type TrjxVehicleTelemetry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//string VehicleID = 1 ; // 1ストリームに複数VehicleID利用可能
	//
	// Types that are assignable to TelemetryType:
	//	*TrjxVehicleTelemetry_Position
	//	*TrjxVehicleTelemetry_Attitude
	//	*TrjxVehicleTelemetry_SysStatus
	//	*TrjxVehicleTelemetry_Battery
	//	*TrjxVehicleTelemetry_KeyValueTelemetry
	//	*TrjxVehicleTelemetry_Heartbeat
	TelemetryType isTrjxVehicleTelemetry_TelemetryType `protobuf_oneof:"TelemetryType"`
}

func (x *TrjxVehicleTelemetry) Reset() {
	*x = TrjxVehicleTelemetry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrjxVehicleTelemetry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrjxVehicleTelemetry) ProtoMessage() {}

func (x *TrjxVehicleTelemetry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrjxVehicleTelemetry.ProtoReflect.Descriptor instead.
func (*TrjxVehicleTelemetry) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{5}
}

func (m *TrjxVehicleTelemetry) GetTelemetryType() isTrjxVehicleTelemetry_TelemetryType {
	if m != nil {
		return m.TelemetryType
	}
	return nil
}

func (x *TrjxVehicleTelemetry) GetPosition() *PositionDef {
	if x, ok := x.GetTelemetryType().(*TrjxVehicleTelemetry_Position); ok {
		return x.Position
	}
	return nil
}

func (x *TrjxVehicleTelemetry) GetAttitude() *AttitudeDef {
	if x, ok := x.GetTelemetryType().(*TrjxVehicleTelemetry_Attitude); ok {
		return x.Attitude
	}
	return nil
}

func (x *TrjxVehicleTelemetry) GetSysStatus() *SysStatusDef {
	if x, ok := x.GetTelemetryType().(*TrjxVehicleTelemetry_SysStatus); ok {
		return x.SysStatus
	}
	return nil
}

func (x *TrjxVehicleTelemetry) GetBattery() *BatteryStatusDef {
	if x, ok := x.GetTelemetryType().(*TrjxVehicleTelemetry_Battery); ok {
		return x.Battery
	}
	return nil
}

func (x *TrjxVehicleTelemetry) GetKeyValueTelemetry() *KeyValueTelemetryDef {
	if x, ok := x.GetTelemetryType().(*TrjxVehicleTelemetry_KeyValueTelemetry); ok {
		return x.KeyValueTelemetry
	}
	return nil
}

func (x *TrjxVehicleTelemetry) GetHeartbeat() *HeartbeatDef {
	if x, ok := x.GetTelemetryType().(*TrjxVehicleTelemetry_Heartbeat); ok {
		return x.Heartbeat
	}
	return nil
}

type isTrjxVehicleTelemetry_TelemetryType interface {
	isTrjxVehicleTelemetry_TelemetryType()
}

type TrjxVehicleTelemetry_Position struct {
	Position *PositionDef `protobuf:"bytes,2,opt,name=Position,proto3,oneof"`
}

type TrjxVehicleTelemetry_Attitude struct {
	Attitude *AttitudeDef `protobuf:"bytes,3,opt,name=Attitude,proto3,oneof"`
}

type TrjxVehicleTelemetry_SysStatus struct {
	SysStatus *SysStatusDef `protobuf:"bytes,4,opt,name=SysStatus,proto3,oneof"` // TRJXバッテリーなど状態UI表示
}

type TrjxVehicleTelemetry_Battery struct {
	Battery *BatteryStatusDef `protobuf:"bytes,10,opt,name=Battery,proto3,oneof"` // バッテリー詳細情報（オプション）
}

type TrjxVehicleTelemetry_KeyValueTelemetry struct {
	KeyValueTelemetry *KeyValueTelemetryDef `protobuf:"bytes,1,opt,name=KeyValueTelemetry,proto3,oneof"` // キーバリュータイプ（暫定API）
}

type TrjxVehicleTelemetry_Heartbeat struct {
	Heartbeat *HeartbeatDef `protobuf:"bytes,11,opt,name=heartbeat,proto3,oneof"`
}

func (*TrjxVehicleTelemetry_Position) isTrjxVehicleTelemetry_TelemetryType() {}

func (*TrjxVehicleTelemetry_Attitude) isTrjxVehicleTelemetry_TelemetryType() {}

func (*TrjxVehicleTelemetry_SysStatus) isTrjxVehicleTelemetry_TelemetryType() {}

func (*TrjxVehicleTelemetry_Battery) isTrjxVehicleTelemetry_TelemetryType() {}

func (*TrjxVehicleTelemetry_KeyValueTelemetry) isTrjxVehicleTelemetry_TelemetryType() {}

func (*TrjxVehicleTelemetry_Heartbeat) isTrjxVehicleTelemetry_TelemetryType() {}

type PositionDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude     float64                     `protobuf:"fixed64,1,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	Longitude    float64                     `protobuf:"fixed64,2,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
	Altitude     float32                     `protobuf:"fixed32,3,opt,name=Altitude,proto3" json:"Altitude,omitempty"` // m
	AltitudeAttr PositionDef_AltitudeAttrDef `protobuf:"varint,4,opt,name=AltitudeAttr,proto3,enum=trjxmavlink.PositionDef_AltitudeAttrDef" json:"AltitudeAttr,omitempty"`
	Vx           float32                     `protobuf:"fixed32,5,opt,name=Vx,proto3" json:"Vx,omitempty"`           // m/s  (Latitude, positive north)
	Vy           float32                     `protobuf:"fixed32,6,opt,name=Vy,proto3" json:"Vy,omitempty"`           // m/s (Longitude, positive east)
	Vz           float32                     `protobuf:"fixed32,7,opt,name=Vz,proto3" json:"Vz,omitempty"`           // m/s  (Altitude, positive down)
	Heading      float32                     `protobuf:"fixed32,8,opt,name=Heading,proto3" json:"Heading,omitempty"` // Vehicle heading (yaw angle), 0.0..359.99 degrees. If unknown, set to: MaxFloat32
}

func (x *PositionDef) Reset() {
	*x = PositionDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionDef) ProtoMessage() {}

func (x *PositionDef) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionDef.ProtoReflect.Descriptor instead.
func (*PositionDef) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{6}
}

func (x *PositionDef) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *PositionDef) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *PositionDef) GetAltitude() float32 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *PositionDef) GetAltitudeAttr() PositionDef_AltitudeAttrDef {
	if x != nil {
		return x.AltitudeAttr
	}
	return PositionDef_Unknown
}

func (x *PositionDef) GetVx() float32 {
	if x != nil {
		return x.Vx
	}
	return 0
}

func (x *PositionDef) GetVy() float32 {
	if x != nil {
		return x.Vy
	}
	return 0
}

func (x *PositionDef) GetVz() float32 {
	if x != nil {
		return x.Vz
	}
	return 0
}

func (x *PositionDef) GetHeading() float32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

type AttitudeDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roll  float32 `protobuf:"fixed32,1,opt,name=Roll,proto3" json:"Roll,omitempty"`   // Roll angle (-pi..+pi)
	Pitch float32 `protobuf:"fixed32,2,opt,name=Pitch,proto3" json:"Pitch,omitempty"` // Pitch angle (-pi..+pi)
	Yaw   float32 `protobuf:"fixed32,3,opt,name=Yaw,proto3" json:"Yaw,omitempty"`     // Yaw angle (-pi..+pi) Hedingに同じ
	// Roll angular speed
	Rollspeed float32 `protobuf:"fixed32,4,opt,name=Rollspeed,proto3" json:"Rollspeed,omitempty"`
	// Pitch angular speed
	Pitchspeed float32 `protobuf:"fixed32,5,opt,name=Pitchspeed,proto3" json:"Pitchspeed,omitempty"`
	// Yaw angular speed
	Yawspeed float32 `protobuf:"fixed32,6,opt,name=Yawspeed,proto3" json:"Yawspeed,omitempty"`
}

func (x *AttitudeDef) Reset() {
	*x = AttitudeDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttitudeDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttitudeDef) ProtoMessage() {}

func (x *AttitudeDef) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttitudeDef.ProtoReflect.Descriptor instead.
func (*AttitudeDef) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{7}
}

func (x *AttitudeDef) GetRoll() float32 {
	if x != nil {
		return x.Roll
	}
	return 0
}

func (x *AttitudeDef) GetPitch() float32 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *AttitudeDef) GetYaw() float32 {
	if x != nil {
		return x.Yaw
	}
	return 0
}

func (x *AttitudeDef) GetRollspeed() float32 {
	if x != nil {
		return x.Rollspeed
	}
	return 0
}

func (x *AttitudeDef) GetPitchspeed() float32 {
	if x != nil {
		return x.Pitchspeed
	}
	return 0
}

func (x *AttitudeDef) GetYawspeed() float32 {
	if x != nil {
		return x.Yawspeed
	}
	return 0
}

type SysStatusDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuLoad          int32   `protobuf:"varint,1,opt,name=CpuLoad,proto3" json:"CpuLoad,omitempty"`                   // % (マイナス値で無効)
	VoltageBattery   float32 `protobuf:"fixed32,2,opt,name=VoltageBattery,proto3" json:"VoltageBattery,omitempty"`    // V (マイナス値で無効)
	CurrentBattery   float32 `protobuf:"fixed32,3,opt,name=CurrentBattery,proto3" json:"CurrentBattery,omitempty"`    // A (マイナス値で無効)
	BatteryRemaining int32   `protobuf:"varint,4,opt,name=BatteryRemaining,proto3" json:"BatteryRemaining,omitempty"` // %  (マイナス値で無効)
}

func (x *SysStatusDef) Reset() {
	*x = SysStatusDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysStatusDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysStatusDef) ProtoMessage() {}

func (x *SysStatusDef) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysStatusDef.ProtoReflect.Descriptor instead.
func (*SysStatusDef) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{8}
}

func (x *SysStatusDef) GetCpuLoad() int32 {
	if x != nil {
		return x.CpuLoad
	}
	return 0
}

func (x *SysStatusDef) GetVoltageBattery() float32 {
	if x != nil {
		return x.VoltageBattery
	}
	return 0
}

func (x *SysStatusDef) GetCurrentBattery() float32 {
	if x != nil {
		return x.CurrentBattery
	}
	return 0
}

func (x *SysStatusDef) GetBatteryRemaining() int32 {
	if x != nil {
		return x.BatteryRemaining
	}
	return 0
}

type BatteryStatusDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Battery ID
	ID int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// Temperature of the battery. INT16_MAX for unknown temperature.
	Temperature float32 `protobuf:"fixed32,4,opt,name=Temperature,proto3" json:"Temperature,omitempty"` // C degree
	// Battery voltage of cells 1 to 10 (see voltages_ext for cells 11-14). Cells in this field above the valid cell count for this battery should have the UINT16_MAX value. If individual cell voltages are unknown or not measured for this battery, then the overall battery voltage should be filled in cell 0, with all others set to UINT16_MAX. If the voltage of the battery is greater than (UINT16_MAX - 1), then cell 0 should be set to (UINT16_MAX - 1), and cell 1 to the remaining voltage. This can be extended to multiple cells if the total voltage is greater than 2 * (UINT16_MAX - 1).
	Voltages []float32 `protobuf:"fixed32,5,rep,packed,name=Voltages,proto3" json:"Voltages,omitempty"` // Volt
	// Battery current, -1: autopilot does not measure the current
	CurrentBattery float32 `protobuf:"fixed32,6,opt,name=CurrentBattery,proto3" json:"CurrentBattery,omitempty"` // A
	// Consumed charge, -1: autopilot does not provide consumption estimate
	CurrentConsumed float32 `protobuf:"fixed32,7,opt,name=CurrentConsumed,proto3" json:"CurrentConsumed,omitempty"` // Ah
	// Consumed energy, -1: autopilot does not provide energy consumption estimate
	EnergyConsumed float32 `protobuf:"fixed32,8,opt,name=EnergyConsumed,proto3" json:"EnergyConsumed,omitempty"` // J
	// Remaining battery energy. Values: [0-100], -1: autopilot does not estimate the remaining battery.
	BatteryRemaining int32 `protobuf:"varint,9,opt,name=BatteryRemaining,proto3" json:"BatteryRemaining,omitempty"` // %
	// Remaining battery time, 0: autopilot does not provide remaining battery time estimate
	TimeRemaining int32 `protobuf:"varint,10,opt,name=TimeRemaining,proto3" json:"TimeRemaining,omitempty"` // sec
	// update time
	Time int64 `protobuf:"varint,20,opt,name=Time,proto3" json:"Time,omitempty"` // UNIX TIME
}

func (x *BatteryStatusDef) Reset() {
	*x = BatteryStatusDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatteryStatusDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatteryStatusDef) ProtoMessage() {}

func (x *BatteryStatusDef) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatteryStatusDef.ProtoReflect.Descriptor instead.
func (*BatteryStatusDef) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{9}
}

func (x *BatteryStatusDef) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *BatteryStatusDef) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *BatteryStatusDef) GetVoltages() []float32 {
	if x != nil {
		return x.Voltages
	}
	return nil
}

func (x *BatteryStatusDef) GetCurrentBattery() float32 {
	if x != nil {
		return x.CurrentBattery
	}
	return 0
}

func (x *BatteryStatusDef) GetCurrentConsumed() float32 {
	if x != nil {
		return x.CurrentConsumed
	}
	return 0
}

func (x *BatteryStatusDef) GetEnergyConsumed() float32 {
	if x != nil {
		return x.EnergyConsumed
	}
	return 0
}

func (x *BatteryStatusDef) GetBatteryRemaining() int32 {
	if x != nil {
		return x.BatteryRemaining
	}
	return 0
}

func (x *BatteryStatusDef) GetTimeRemaining() int32 {
	if x != nil {
		return x.TimeRemaining
	}
	return 0
}

func (x *BatteryStatusDef) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type HeartbeatDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlightState FlightStateType `protobuf:"varint,1,opt,name=FlightState,proto3,enum=trjxmavlink.FlightStateType" json:"FlightState,omitempty"` // DisplayModeDef DisplayMode = 2;
}

func (x *HeartbeatDef) Reset() {
	*x = HeartbeatDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatDef) ProtoMessage() {}

func (x *HeartbeatDef) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatDef.ProtoReflect.Descriptor instead.
func (*HeartbeatDef) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{10}
}

func (x *HeartbeatDef) GetFlightState() FlightStateType {
	if x != nil {
		return x.FlightState
	}
	return FlightStateType_Unknown
}

type TrjxVehicleReceiveCommandHandling struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VehicleID string                                         `protobuf:"bytes,1,opt,name=VehicleID,proto3" json:"VehicleID,omitempty"`
	Response  *TrjxVehicleReceiveCommandHandling_ResponseDef `protobuf:"bytes,2,opt,name=Response,proto3" json:"Response,omitempty"` // Commnadに対するレスポンス。
}

func (x *TrjxVehicleReceiveCommandHandling) Reset() {
	*x = TrjxVehicleReceiveCommandHandling{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrjxVehicleReceiveCommandHandling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrjxVehicleReceiveCommandHandling) ProtoMessage() {}

func (x *TrjxVehicleReceiveCommandHandling) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrjxVehicleReceiveCommandHandling.ProtoReflect.Descriptor instead.
func (*TrjxVehicleReceiveCommandHandling) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{11}
}

func (x *TrjxVehicleReceiveCommandHandling) GetVehicleID() string {
	if x != nil {
		return x.VehicleID
	}
	return ""
}

func (x *TrjxVehicleReceiveCommandHandling) GetResponse() *TrjxVehicleReceiveCommandHandling_ResponseDef {
	if x != nil {
		return x.Response
	}
	return nil
}

type TrjxVehicleCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq int32 `protobuf:"varint,1,opt,name=Seq,proto3" json:"Seq,omitempty"`
	// Types that are assignable to Command:
	//	*TrjxVehicleCommand_NotifyCollision
	//	*TrjxVehicleCommand_NotifyAvoidance
	//	*TrjxVehicleCommand_SetMission
	//	*TrjxVehicleCommand_SetMissionInFlight
	//	*TrjxVehicleCommand_ExecMission
	//	*TrjxVehicleCommand_Pause
	//	*TrjxVehicleCommand_Land
	//	*TrjxVehicleCommand_Arm
	//	*TrjxVehicleCommand_Takeoff
	//	*TrjxVehicleCommand_Goto
	Command isTrjxVehicleCommand_Command `protobuf_oneof:"Command"`
}

func (x *TrjxVehicleCommand) Reset() {
	*x = TrjxVehicleCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrjxVehicleCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrjxVehicleCommand) ProtoMessage() {}

func (x *TrjxVehicleCommand) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrjxVehicleCommand.ProtoReflect.Descriptor instead.
func (*TrjxVehicleCommand) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{12}
}

func (x *TrjxVehicleCommand) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (m *TrjxVehicleCommand) GetCommand() isTrjxVehicleCommand_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *TrjxVehicleCommand) GetNotifyCollision() *Collision {
	if x, ok := x.GetCommand().(*TrjxVehicleCommand_NotifyCollision); ok {
		return x.NotifyCollision
	}
	return nil
}

func (x *TrjxVehicleCommand) GetNotifyAvoidance() *Avoidance {
	if x, ok := x.GetCommand().(*TrjxVehicleCommand_NotifyAvoidance); ok {
		return x.NotifyAvoidance
	}
	return nil
}

func (x *TrjxVehicleCommand) GetSetMission() *trjxmission.Mission {
	if x, ok := x.GetCommand().(*TrjxVehicleCommand_SetMission); ok {
		return x.SetMission
	}
	return nil
}

func (x *TrjxVehicleCommand) GetSetMissionInFlight() *trjxmission.Mission {
	if x, ok := x.GetCommand().(*TrjxVehicleCommand_SetMissionInFlight); ok {
		return x.SetMissionInFlight
	}
	return nil
}

func (x *TrjxVehicleCommand) GetExecMission() *TVCExecMission {
	if x, ok := x.GetCommand().(*TrjxVehicleCommand_ExecMission); ok {
		return x.ExecMission
	}
	return nil
}

func (x *TrjxVehicleCommand) GetPause() *TVCPause {
	if x, ok := x.GetCommand().(*TrjxVehicleCommand_Pause); ok {
		return x.Pause
	}
	return nil
}

func (x *TrjxVehicleCommand) GetLand() *TVCLand {
	if x, ok := x.GetCommand().(*TrjxVehicleCommand_Land); ok {
		return x.Land
	}
	return nil
}

func (x *TrjxVehicleCommand) GetArm() *TVCArm {
	if x, ok := x.GetCommand().(*TrjxVehicleCommand_Arm); ok {
		return x.Arm
	}
	return nil
}

func (x *TrjxVehicleCommand) GetTakeoff() *TVCTakeoff {
	if x, ok := x.GetCommand().(*TrjxVehicleCommand_Takeoff); ok {
		return x.Takeoff
	}
	return nil
}

func (x *TrjxVehicleCommand) GetGoto() *TVCGoto {
	if x, ok := x.GetCommand().(*TrjxVehicleCommand_Goto); ok {
		return x.Goto
	}
	return nil
}

type isTrjxVehicleCommand_Command interface {
	isTrjxVehicleCommand_Command()
}

type TrjxVehicleCommand_NotifyCollision struct {
	NotifyCollision *Collision `protobuf:"bytes,2,opt,name=NotifyCollision,proto3,oneof"`
}

type TrjxVehicleCommand_NotifyAvoidance struct {
	NotifyAvoidance *Avoidance `protobuf:"bytes,3,opt,name=NotifyAvoidance,proto3,oneof"`
}

type TrjxVehicleCommand_SetMission struct {
	SetMission *trjxmission.Mission `protobuf:"bytes,4,opt,name=SetMission,proto3,oneof"`
}

type TrjxVehicleCommand_SetMissionInFlight struct {
	SetMissionInFlight *trjxmission.Mission `protobuf:"bytes,5,opt,name=SetMissionInFlight,proto3,oneof"`
}

type TrjxVehicleCommand_ExecMission struct {
	ExecMission *TVCExecMission `protobuf:"bytes,6,opt,name=ExecMission,proto3,oneof"`
}

type TrjxVehicleCommand_Pause struct {
	Pause *TVCPause `protobuf:"bytes,7,opt,name=Pause,proto3,oneof"`
}

type TrjxVehicleCommand_Land struct {
	Land *TVCLand `protobuf:"bytes,9,opt,name=Land,proto3,oneof"` // Land/RTL中はResult=Continue,着陸完了でesult=Complete
}

type TrjxVehicleCommand_Arm struct {
	Arm *TVCArm `protobuf:"bytes,10,opt,name=Arm,proto3,oneof"`
}

type TrjxVehicleCommand_Takeoff struct {
	Takeoff *TVCTakeoff `protobuf:"bytes,11,opt,name=Takeoff,proto3,oneof"`
}

type TrjxVehicleCommand_Goto struct {
	Goto *TVCGoto `protobuf:"bytes,12,opt,name=Goto,proto3,oneof"`
}

func (*TrjxVehicleCommand_NotifyCollision) isTrjxVehicleCommand_Command() {}

func (*TrjxVehicleCommand_NotifyAvoidance) isTrjxVehicleCommand_Command() {}

func (*TrjxVehicleCommand_SetMission) isTrjxVehicleCommand_Command() {}

func (*TrjxVehicleCommand_SetMissionInFlight) isTrjxVehicleCommand_Command() {}

func (*TrjxVehicleCommand_ExecMission) isTrjxVehicleCommand_Command() {}

func (*TrjxVehicleCommand_Pause) isTrjxVehicleCommand_Command() {}

func (*TrjxVehicleCommand_Land) isTrjxVehicleCommand_Command() {}

func (*TrjxVehicleCommand_Arm) isTrjxVehicleCommand_Command() {}

func (*TrjxVehicleCommand_Takeoff) isTrjxVehicleCommand_Command() {}

func (*TrjxVehicleCommand_Goto) isTrjxVehicleCommand_Command() {}

type Collision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        int32   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	DistanceX float32 `protobuf:"fixed32,2,opt,name=DistanceX,proto3" json:"DistanceX,omitempty"`
	DistanceY float32 `protobuf:"fixed32,3,opt,name=DistanceY,proto3" json:"DistanceY,omitempty"`
	DistanceZ float32 `protobuf:"fixed32,4,opt,name=DistanceZ,proto3" json:"DistanceZ,omitempty"`
	SpeedX    float32 `protobuf:"fixed32,5,opt,name=SpeedX,proto3" json:"SpeedX,omitempty"`
	SpeedY    float32 `protobuf:"fixed32,6,opt,name=SpeedY,proto3" json:"SpeedY,omitempty"`
	SpeedZ    float32 `protobuf:"fixed32,7,opt,name=SpeedZ,proto3" json:"SpeedZ,omitempty"`
}

func (x *Collision) Reset() {
	*x = Collision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collision) ProtoMessage() {}

func (x *Collision) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collision.ProtoReflect.Descriptor instead.
func (*Collision) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{13}
}

func (x *Collision) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Collision) GetDistanceX() float32 {
	if x != nil {
		return x.DistanceX
	}
	return 0
}

func (x *Collision) GetDistanceY() float32 {
	if x != nil {
		return x.DistanceY
	}
	return 0
}

func (x *Collision) GetDistanceZ() float32 {
	if x != nil {
		return x.DistanceZ
	}
	return 0
}

func (x *Collision) GetSpeedX() float32 {
	if x != nil {
		return x.SpeedX
	}
	return 0
}

func (x *Collision) GetSpeedY() float32 {
	if x != nil {
		return x.SpeedY
	}
	return 0
}

func (x *Collision) GetSpeedZ() float32 {
	if x != nil {
		return x.SpeedZ
	}
	return 0
}

type Avoidance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Avoidance) Reset() {
	*x = Avoidance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Avoidance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Avoidance) ProtoMessage() {}

func (x *Avoidance) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Avoidance.ProtoReflect.Descriptor instead.
func (*Avoidance) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{14}
}

// キーバリュータイプテレメトリー
type KeyValueTelemetryDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to TelemetryElement:
	//	*KeyValueTelemetryDef_Latitude
	//	*KeyValueTelemetryDef_Longitude
	//	*KeyValueTelemetryDef_Altitude
	//	*KeyValueTelemetryDef_Vx
	//	*KeyValueTelemetryDef_Vy
	//	*KeyValueTelemetryDef_Vz
	//	*KeyValueTelemetryDef_Heading
	//	*KeyValueTelemetryDef_Roll
	//	*KeyValueTelemetryDef_Pitch
	//	*KeyValueTelemetryDef_BatteryRemaining
	TelemetryElement isKeyValueTelemetryDef_TelemetryElement `protobuf_oneof:"TelemetryElement"`
}

func (x *KeyValueTelemetryDef) Reset() {
	*x = KeyValueTelemetryDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValueTelemetryDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValueTelemetryDef) ProtoMessage() {}

func (x *KeyValueTelemetryDef) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValueTelemetryDef.ProtoReflect.Descriptor instead.
func (*KeyValueTelemetryDef) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{15}
}

func (m *KeyValueTelemetryDef) GetTelemetryElement() isKeyValueTelemetryDef_TelemetryElement {
	if m != nil {
		return m.TelemetryElement
	}
	return nil
}

func (x *KeyValueTelemetryDef) GetLatitude() float64 {
	if x, ok := x.GetTelemetryElement().(*KeyValueTelemetryDef_Latitude); ok {
		return x.Latitude
	}
	return 0
}

func (x *KeyValueTelemetryDef) GetLongitude() float64 {
	if x, ok := x.GetTelemetryElement().(*KeyValueTelemetryDef_Longitude); ok {
		return x.Longitude
	}
	return 0
}

func (x *KeyValueTelemetryDef) GetAltitude() *KeyValueTelemetryDef_AltitudeElement {
	if x, ok := x.GetTelemetryElement().(*KeyValueTelemetryDef_Altitude); ok {
		return x.Altitude
	}
	return nil
}

func (x *KeyValueTelemetryDef) GetVx() float32 {
	if x, ok := x.GetTelemetryElement().(*KeyValueTelemetryDef_Vx); ok {
		return x.Vx
	}
	return 0
}

func (x *KeyValueTelemetryDef) GetVy() float32 {
	if x, ok := x.GetTelemetryElement().(*KeyValueTelemetryDef_Vy); ok {
		return x.Vy
	}
	return 0
}

func (x *KeyValueTelemetryDef) GetVz() float32 {
	if x, ok := x.GetTelemetryElement().(*KeyValueTelemetryDef_Vz); ok {
		return x.Vz
	}
	return 0
}

func (x *KeyValueTelemetryDef) GetHeading() float32 {
	if x, ok := x.GetTelemetryElement().(*KeyValueTelemetryDef_Heading); ok {
		return x.Heading
	}
	return 0
}

func (x *KeyValueTelemetryDef) GetRoll() float32 {
	if x, ok := x.GetTelemetryElement().(*KeyValueTelemetryDef_Roll); ok {
		return x.Roll
	}
	return 0
}

func (x *KeyValueTelemetryDef) GetPitch() float32 {
	if x, ok := x.GetTelemetryElement().(*KeyValueTelemetryDef_Pitch); ok {
		return x.Pitch
	}
	return 0
}

func (x *KeyValueTelemetryDef) GetBatteryRemaining() int32 {
	if x, ok := x.GetTelemetryElement().(*KeyValueTelemetryDef_BatteryRemaining); ok {
		return x.BatteryRemaining
	}
	return 0
}

type isKeyValueTelemetryDef_TelemetryElement interface {
	isKeyValueTelemetryDef_TelemetryElement()
}

type KeyValueTelemetryDef_Latitude struct {
	Latitude float64 `protobuf:"fixed64,1,opt,name=Latitude,proto3,oneof"` // degree <oneof TelemetryElement>
}

type KeyValueTelemetryDef_Longitude struct {
	Longitude float64 `protobuf:"fixed64,2,opt,name=Longitude,proto3,oneof"` // degree <oneof TelemetryElement>
}

type KeyValueTelemetryDef_Altitude struct {
	Altitude *KeyValueTelemetryDef_AltitudeElement `protobuf:"bytes,3,opt,name=Altitude,proto3,oneof"` //  <oneof TelemetryElement>
}

type KeyValueTelemetryDef_Vx struct {
	Vx float32 `protobuf:"fixed32,4,opt,name=Vx,proto3,oneof"` // m/s  (Latitude, positive north)  <oneof TelemetryElement>
}

type KeyValueTelemetryDef_Vy struct {
	Vy float32 `protobuf:"fixed32,5,opt,name=Vy,proto3,oneof"` // m/s (Longitude, positive east)  <oneof TelemetryElement>
}

type KeyValueTelemetryDef_Vz struct {
	Vz float32 `protobuf:"fixed32,6,opt,name=Vz,proto3,oneof"` // m/s  (Altitude, positive down)  <oneof TelemetryElement>
}

type KeyValueTelemetryDef_Heading struct {
	Heading float32 `protobuf:"fixed32,7,opt,name=Heading,proto3,oneof"` // Vehicle heading (yaw angle), 0.0..359.99 degrees. If unknown, set to: MaxFloat32  <oneof TelemetryElement>
}

type KeyValueTelemetryDef_Roll struct {
	Roll float32 `protobuf:"fixed32,8,opt,name=Roll,proto3,oneof"` // Roll angle (-pi..+pi)  <oneof TelemetryElement>
}

type KeyValueTelemetryDef_Pitch struct {
	Pitch float32 `protobuf:"fixed32,9,opt,name=Pitch,proto3,oneof"` // Pitch angle (-pi..+pi)  <oneof TelemetryElement>
}

type KeyValueTelemetryDef_BatteryRemaining struct {
	BatteryRemaining int32 `protobuf:"varint,10,opt,name=BatteryRemaining,proto3,oneof"` // %  <oneof TelemetryElement>
}

func (*KeyValueTelemetryDef_Latitude) isKeyValueTelemetryDef_TelemetryElement() {}

func (*KeyValueTelemetryDef_Longitude) isKeyValueTelemetryDef_TelemetryElement() {}

func (*KeyValueTelemetryDef_Altitude) isKeyValueTelemetryDef_TelemetryElement() {}

func (*KeyValueTelemetryDef_Vx) isKeyValueTelemetryDef_TelemetryElement() {}

func (*KeyValueTelemetryDef_Vy) isKeyValueTelemetryDef_TelemetryElement() {}

func (*KeyValueTelemetryDef_Vz) isKeyValueTelemetryDef_TelemetryElement() {}

func (*KeyValueTelemetryDef_Heading) isKeyValueTelemetryDef_TelemetryElement() {}

func (*KeyValueTelemetryDef_Roll) isKeyValueTelemetryDef_TelemetryElement() {}

func (*KeyValueTelemetryDef_Pitch) isKeyValueTelemetryDef_TelemetryElement() {}

func (*KeyValueTelemetryDef_BatteryRemaining) isKeyValueTelemetryDef_TelemetryElement() {}

type TVCExecMission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TVCExecMission) Reset() {
	*x = TVCExecMission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVCExecMission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVCExecMission) ProtoMessage() {}

func (x *TVCExecMission) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVCExecMission.ProtoReflect.Descriptor instead.
func (*TVCExecMission) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{16}
}

type TVCPause struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pause bool `protobuf:"varint,1,opt,name=Pause,proto3" json:"Pause,omitempty"` // tureでPause、falseでResume
}

func (x *TVCPause) Reset() {
	*x = TVCPause{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVCPause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVCPause) ProtoMessage() {}

func (x *TVCPause) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVCPause.ProtoReflect.Descriptor instead.
func (*TVCPause) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{17}
}

func (x *TVCPause) GetPause() bool {
	if x != nil {
		return x.Pause
	}
	return false
}

type TVCLand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RTL bool `protobuf:"varint,1,opt,name=RTL,proto3" json:"RTL,omitempty"` // trueでRTL/RTH
}

func (x *TVCLand) Reset() {
	*x = TVCLand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVCLand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVCLand) ProtoMessage() {}

func (x *TVCLand) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVCLand.ProtoReflect.Descriptor instead.
func (*TVCLand) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{18}
}

func (x *TVCLand) GetRTL() bool {
	if x != nil {
		return x.RTL
	}
	return false
}

type TVCArm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arm bool `protobuf:"varint,1,opt,name=Arm,proto3" json:"Arm,omitempty"` // true=arm, false=disarm
}

func (x *TVCArm) Reset() {
	*x = TVCArm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVCArm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVCArm) ProtoMessage() {}

func (x *TVCArm) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVCArm.ProtoReflect.Descriptor instead.
func (*TVCArm) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{19}
}

func (x *TVCArm) GetArm() bool {
	if x != nil {
		return x.Arm
	}
	return false
}

type TVCTakeoff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TVCTakeoff) Reset() {
	*x = TVCTakeoff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVCTakeoff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVCTakeoff) ProtoMessage() {}

func (x *TVCTakeoff) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVCTakeoff.ProtoReflect.Descriptor instead.
func (*TVCTakeoff) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{20}
}

type TVCGoto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float64               `protobuf:"fixed64,1,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	Longitude float64               `protobuf:"fixed64,2,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
	Altitude  *trjxmission.Altitude `protobuf:"bytes,3,opt,name=Altitude,proto3" json:"Altitude,omitempty"`
}

func (x *TVCGoto) Reset() {
	*x = TVCGoto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TVCGoto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TVCGoto) ProtoMessage() {}

func (x *TVCGoto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TVCGoto.ProtoReflect.Descriptor instead.
func (*TVCGoto) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{21}
}

func (x *TVCGoto) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *TVCGoto) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *TVCGoto) GetAltitude() *trjxmission.Altitude {
	if x != nil {
		return x.Altitude
	}
	return nil
}

type TrjxVehicleReceiveCommandHandling_ResponseDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq    int32                                                   `protobuf:"varint,1,opt,name=Seq,proto3" json:"Seq,omitempty"` // CommandのSeq
	Result TrjxVehicleReceiveCommandHandling_ResponseDef_ResultDef `protobuf:"varint,2,opt,name=Result,proto3,enum=trjxmavlink.TrjxVehicleReceiveCommandHandling_ResponseDef_ResultDef" json:"Result,omitempty"`
	Info   string                                                  `protobuf:"bytes,3,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *TrjxVehicleReceiveCommandHandling_ResponseDef) Reset() {
	*x = TrjxVehicleReceiveCommandHandling_ResponseDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrjxVehicleReceiveCommandHandling_ResponseDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrjxVehicleReceiveCommandHandling_ResponseDef) ProtoMessage() {}

func (x *TrjxVehicleReceiveCommandHandling_ResponseDef) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrjxVehicleReceiveCommandHandling_ResponseDef.ProtoReflect.Descriptor instead.
func (*TrjxVehicleReceiveCommandHandling_ResponseDef) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{11, 0}
}

func (x *TrjxVehicleReceiveCommandHandling_ResponseDef) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *TrjxVehicleReceiveCommandHandling_ResponseDef) GetResult() TrjxVehicleReceiveCommandHandling_ResponseDef_ResultDef {
	if x != nil {
		return x.Result
	}
	return TrjxVehicleReceiveCommandHandling_ResponseDef_Complete
}

func (x *TrjxVehicleReceiveCommandHandling_ResponseDef) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type KeyValueTelemetryDef_AltitudeElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Altitude     float32                     `protobuf:"fixed32,1,opt,name=Altitude,proto3" json:"Altitude,omitempty"` // m
	AltitudeAttr PositionDef_AltitudeAttrDef `protobuf:"varint,2,opt,name=AltitudeAttr,proto3,enum=trjxmavlink.PositionDef_AltitudeAttrDef" json:"AltitudeAttr,omitempty"`
}

func (x *KeyValueTelemetryDef_AltitudeElement) Reset() {
	*x = KeyValueTelemetryDef_AltitudeElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValueTelemetryDef_AltitudeElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValueTelemetryDef_AltitudeElement) ProtoMessage() {}

func (x *KeyValueTelemetryDef_AltitudeElement) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValueTelemetryDef_AltitudeElement.ProtoReflect.Descriptor instead.
func (*KeyValueTelemetryDef_AltitudeElement) Descriptor() ([]byte, []int) {
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP(), []int{15, 0}
}

func (x *KeyValueTelemetryDef_AltitudeElement) GetAltitude() float32 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *KeyValueTelemetryDef_AltitudeElement) GetAltitudeAttr() PositionDef_AltitudeAttrDef {
	if x != nil {
		return x.AltitudeAttr
	}
	return PositionDef_Unknown
}

var File_proto_mav_controller_outside_trjxgcs_proto protoreflect.FileDescriptor

var file_proto_mav_controller_outside_trjxgcs_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x76, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x2f, 0x74,
	0x72, 0x6a, 0x78, 0x67, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x74, 0x72,
	0x6a, 0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x1a, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6d, 0x61, 0x76, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f,
	0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x2f, 0x74, 0x72, 0x6a, 0x78, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x6d, 0x61, 0x76, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x69, 0x72, 0x63, 0x72,
	0x61, 0x66, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x69, 0x72,
	0x63, 0x72, 0x61, 0x66, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x28, 0x0a, 0x0e, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x4f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9c, 0x01, 0x0a, 0x07, 0x47, 0x43,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x31, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76, 0x6c,
	0x69, 0x6e, 0x6b, 0x2e, 0x47, 0x43, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x48,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10,
	0x03, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x55, 0x41, 0x56, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x0a, 0x22, 0x57, 0x0a, 0x12, 0x54, 0x72, 0x6a, 0x78,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32,
	0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x14, 0x0a, 0x12, 0x54, 0x72, 0x6a, 0x78, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x54, 0x72, 0x6a, 0x78, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9b,
	0x03, 0x0a, 0x14, 0x54, 0x72, 0x6a, 0x78, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x72, 0x6a, 0x78,
	0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x66, 0x48, 0x00, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x36, 0x0a, 0x08, 0x41, 0x74, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e,
	0x41, 0x74, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x44, 0x65, 0x66, 0x48, 0x00, 0x52, 0x08, 0x41,
	0x74, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x53, 0x79, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x6a,
	0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x53, 0x79, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x44, 0x65, 0x66, 0x48, 0x00, 0x52, 0x09, 0x53, 0x79, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x39, 0x0a, 0x07, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e,
	0x6b, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44,
	0x65, 0x66, 0x48, 0x00, 0x52, 0x07, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x51, 0x0a,
	0x11, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d,
	0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x44, 0x65, 0x66, 0x48, 0x00, 0x52, 0x11, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79,
	0x12, 0x39, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e,
	0x6b, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x44, 0x65, 0x66, 0x48, 0x00,
	0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x54,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbd, 0x02, 0x0a,
	0x0b, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x12, 0x1a, 0x0a, 0x08,
	0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d,
	0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x66, 0x2e, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x44,
	0x65, 0x66, 0x52, 0x0c, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x56, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x56, 0x78,
	0x12, 0x0e, 0x0a, 0x02, 0x56, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x56, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x56, 0x7a, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02, 0x56, 0x7a,
	0x12, 0x18, 0x0a, 0x07, 0x48, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x40, 0x0a, 0x0f, 0x41, 0x6c,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x44, 0x65, 0x66, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x6c,
	0x6c, 0x69, 0x70, 0x73, 0x6f, 0x69, 0x64, 0x65, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x53,
	0x4c, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x47, 0x4c, 0x10, 0x03, 0x22, 0xa3, 0x01, 0x0a,
	0x0b, 0x41, 0x74, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x44, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04,
	0x52, 0x6f, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x50, 0x69, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x50, 0x69, 0x74, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x59, 0x61, 0x77, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x59, 0x61, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x6f, 0x6c, 0x6c,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x52, 0x6f, 0x6c,
	0x6c, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x69, 0x74, 0x63, 0x68, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x50, 0x69, 0x74, 0x63,
	0x68, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x59, 0x61, 0x77, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x59, 0x61, 0x77, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x44, 0x65, 0x66, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x43, 0x70, 0x75, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x42, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x2a, 0x0a,
	0x10, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0xc0, 0x02, 0x0a, 0x10, 0x42, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x66, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x02, 0x52, 0x08, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x12, 0x26,
	0x0a, 0x0e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x0c,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x44, 0x65, 0x66, 0x12, 0x3e, 0x0a, 0x0b,
	0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e,
	0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xe1, 0x02, 0x0a,
	0x21, 0x54, 0x72, 0x6a, 0x78, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x69,
	0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44,
	0x12, 0x56, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b,
	0x2e, 0x54, 0x72, 0x6a, 0x78, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x66, 0x52, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xc5, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x71, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x53, 0x65, 0x71, 0x12, 0x5c, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x74, 0x72, 0x6a,
	0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x72, 0x6a, 0x78, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x44, 0x65, 0x66, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x66,
	0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x32, 0x0a, 0x09,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x66, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x69,
	0x6e, 0x75, 0x65, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x14,
	0x22, 0xdf, 0x04, 0x0a, 0x12, 0x54, 0x72, 0x6a, 0x78, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x71, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x53, 0x65, 0x71, 0x12, 0x42, 0x0a, 0x0f, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b,
	0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a,
	0x0f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x76, 0x6f, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76,
	0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x41, 0x76, 0x6f, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x00,
	0x52, 0x0f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x76, 0x6f, 0x69, 0x64, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x36, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x53,
	0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x12, 0x53, 0x65, 0x74,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x53,
	0x65, 0x74, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x46, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x3f, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76,
	0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x56, 0x43, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x05, 0x50, 0x61, 0x75, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e,
	0x54, 0x56, 0x43, 0x50, 0x61, 0x75, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x50, 0x61, 0x75, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x04, 0x4c, 0x61, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x56,
	0x43, 0x4c, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x04, 0x4c, 0x61, 0x6e, 0x64, 0x12, 0x27, 0x0a,
	0x03, 0x41, 0x72, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x72, 0x6a,
	0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x56, 0x43, 0x41, 0x72, 0x6d, 0x48,
	0x00, 0x52, 0x03, 0x41, 0x72, 0x6d, 0x12, 0x33, 0x0a, 0x07, 0x54, 0x61, 0x6b, 0x65, 0x6f, 0x66,
	0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61,
	0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x56, 0x43, 0x54, 0x61, 0x6b, 0x65, 0x6f, 0x66, 0x66,
	0x48, 0x00, 0x52, 0x07, 0x54, 0x61, 0x6b, 0x65, 0x6f, 0x66, 0x66, 0x12, 0x2a, 0x0a, 0x04, 0x47,
	0x6f, 0x74, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x72, 0x6a, 0x78,
	0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x56, 0x43, 0x47, 0x6f, 0x74, 0x6f, 0x48,
	0x00, 0x52, 0x04, 0x47, 0x6f, 0x74, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x22, 0xbd, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6c, 0x6c, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x58, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x58, 0x12, 0x1c,
	0x0a, 0x09, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x59, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x59, 0x12, 0x1c, 0x0a, 0x09,
	0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x09, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5a, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x58, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x53, 0x70, 0x65, 0x65,
	0x64, 0x58, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x70, 0x65, 0x65, 0x64, 0x59, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x53, 0x70, 0x65, 0x65, 0x64, 0x59, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x5a, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x53, 0x70, 0x65, 0x65,
	0x64, 0x5a, 0x22, 0x0b, 0x0a, 0x09, 0x41, 0x76, 0x6f, 0x69, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x22,
	0xe4, 0x03, 0x0a, 0x14, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x44, 0x65, 0x66, 0x12, 0x1c, 0x0a, 0x08, 0x4c, 0x61, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x08, 0x4c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x09, 0x4c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d,
	0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x44, 0x65, 0x66, 0x2e, 0x41, 0x6c, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x08, 0x41,
	0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x02, 0x56, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x02, 0x56, 0x78, 0x12, 0x10, 0x0a, 0x02, 0x56, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x02, 0x56, 0x79, 0x12, 0x10, 0x0a, 0x02, 0x56,
	0x7a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x02, 0x56, 0x7a, 0x12, 0x1a, 0x0a,
	0x07, 0x48, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00,
	0x52, 0x07, 0x48, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x04, 0x52, 0x6f, 0x6c,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x6c, 0x12,
	0x16, 0x0a, 0x05, 0x50, 0x69, 0x74, 0x63, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00,
	0x52, 0x05, 0x50, 0x69, 0x74, 0x63, 0x68, 0x12, 0x2c, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x10, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x1a, 0x7b, 0x0a, 0x0f, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x6c, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x41, 0x6c, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x74, 0x72, 0x6a,
	0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x66, 0x2e, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x44, 0x65, 0x66, 0x52, 0x0c, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x42, 0x12, 0x0a, 0x10, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x54, 0x56, 0x43, 0x45, 0x78, 0x65,
	0x63, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x20, 0x0a, 0x08, 0x54, 0x56, 0x43, 0x50,
	0x61, 0x75, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x61, 0x75, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x50, 0x61, 0x75, 0x73, 0x65, 0x22, 0x1b, 0x0a, 0x07, 0x54, 0x56,
	0x43, 0x4c, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x54, 0x4c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x03, 0x52, 0x54, 0x4c, 0x22, 0x1a, 0x0a, 0x06, 0x54, 0x56, 0x43, 0x41, 0x72,
	0x6d, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03,
	0x41, 0x72, 0x6d, 0x22, 0x0c, 0x0a, 0x0a, 0x54, 0x56, 0x43, 0x54, 0x61, 0x6b, 0x65, 0x6f, 0x66,
	0x66, 0x22, 0x76, 0x0a, 0x07, 0x54, 0x56, 0x43, 0x47, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x52,
	0x08, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x2a, 0x44, 0x0a, 0x0f, 0x46, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x74, 0x6f,
	0x70, 0x70, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x6e, 0x41, 0x69, 0x72, 0x10, 0x03, 0x32,
	0xfa, 0x03, 0x0a, 0x0e, 0x54, 0x72, 0x6a, 0x78, 0x47, 0x63, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x4c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x69, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x74, 0x72, 0x6a,
	0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e,
	0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x53, 0x65, 0x72,
	0x69, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0x00,
	0x12, 0x3e, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x74, 0x72,
	0x6a, 0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d,
	0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x47, 0x43, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x00,
	0x12, 0x55, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12,
	0x1f, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x72,
	0x6a, 0x78, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x1f, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x54,
	0x72, 0x6a, 0x78, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x50, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b,
	0x2e, 0x54, 0x72, 0x6a, 0x78, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e,
	0x6b, 0x2e, 0x54, 0x72, 0x6a, 0x78, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x48, 0x0a, 0x09, 0x54, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x21, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76,
	0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x72, 0x6a, 0x78, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x1a, 0x12, 0x2e, 0x74, 0x72, 0x6a, 0x78,
	0x6d, 0x61, 0x76, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28,
	0x01, 0x30, 0x01, 0x12, 0x67, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x2e, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76, 0x6c,
	0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x72, 0x6a, 0x78, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x69, 0x6e, 0x67, 0x1a, 0x1f, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76, 0x6c,
	0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x72, 0x6a, 0x78, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x16, 0x5a, 0x14,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x6f, 0x2f, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x61, 0x76,
	0x6c, 0x69, 0x6e, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_mav_controller_outside_trjxgcs_proto_rawDescOnce sync.Once
	file_proto_mav_controller_outside_trjxgcs_proto_rawDescData = file_proto_mav_controller_outside_trjxgcs_proto_rawDesc
)

func file_proto_mav_controller_outside_trjxgcs_proto_rawDescGZIP() []byte {
	file_proto_mav_controller_outside_trjxgcs_proto_rawDescOnce.Do(func() {
		file_proto_mav_controller_outside_trjxgcs_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_mav_controller_outside_trjxgcs_proto_rawDescData)
	})
	return file_proto_mav_controller_outside_trjxgcs_proto_rawDescData
}

var file_proto_mav_controller_outside_trjxgcs_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_mav_controller_outside_trjxgcs_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_proto_mav_controller_outside_trjxgcs_proto_goTypes = []interface{}{
	(FlightStateType)(0),             // 0: trjxmavlink.FlightStateType
	(GCToken_Code)(0),                // 1: trjxmavlink.GCToken.Code
	(PositionDef_AltitudeAttrDef)(0), // 2: trjxmavlink.PositionDef.AltitudeAttrDef
	(TrjxVehicleReceiveCommandHandling_ResponseDef_ResultDef)(0), // 3: trjxmavlink.TrjxVehicleReceiveCommandHandling.ResponseDef.ResultDef
	(*ConnectRequest)(nil),                    // 4: trjxmavlink.ConnectRequest
	(*GCToken)(nil),                           // 5: trjxmavlink.GCToken
	(*TrjxVehicleMessage)(nil),                // 6: trjxmavlink.TrjxVehicleMessage
	(*TrjxVehicleRequest)(nil),                // 7: trjxmavlink.TrjxVehicleRequest
	(*TrjxVehicleResponse)(nil),               // 8: trjxmavlink.TrjxVehicleResponse
	(*TrjxVehicleTelemetry)(nil),              // 9: trjxmavlink.TrjxVehicleTelemetry
	(*PositionDef)(nil),                       // 10: trjxmavlink.PositionDef
	(*AttitudeDef)(nil),                       // 11: trjxmavlink.AttitudeDef
	(*SysStatusDef)(nil),                      // 12: trjxmavlink.SysStatusDef
	(*BatteryStatusDef)(nil),                  // 13: trjxmavlink.BatteryStatusDef
	(*HeartbeatDef)(nil),                      // 14: trjxmavlink.HeartbeatDef
	(*TrjxVehicleReceiveCommandHandling)(nil), // 15: trjxmavlink.TrjxVehicleReceiveCommandHandling
	(*TrjxVehicleCommand)(nil),                // 16: trjxmavlink.TrjxVehicleCommand
	(*Collision)(nil),                         // 17: trjxmavlink.Collision
	(*Avoidance)(nil),                         // 18: trjxmavlink.Avoidance
	(*KeyValueTelemetryDef)(nil),              // 19: trjxmavlink.KeyValueTelemetryDef
	(*TVCExecMission)(nil),                    // 20: trjxmavlink.TVCExecMission
	(*TVCPause)(nil),                          // 21: trjxmavlink.TVCPause
	(*TVCLand)(nil),                           // 22: trjxmavlink.TVCLand
	(*TVCArm)(nil),                            // 23: trjxmavlink.TVCArm
	(*TVCTakeoff)(nil),                        // 24: trjxmavlink.TVCTakeoff
	(*TVCGoto)(nil),                           // 25: trjxmavlink.TVCGoto
	(*TrjxVehicleReceiveCommandHandling_ResponseDef)(nil), // 26: trjxmavlink.TrjxVehicleReceiveCommandHandling.ResponseDef
	(*KeyValueTelemetryDef_AltitudeElement)(nil),          // 27: trjxmavlink.KeyValueTelemetryDef.AltitudeElement
	(*Empty)(nil),                // 28: trjxmavlink.Empty
	(*trjxmission.Mission)(nil),  // 29: trjxmission.Mission
	(*trjxmission.Altitude)(nil), // 30: trjxmission.Altitude
	(*SeriviceAttribute)(nil),    // 31: trjxmavlink.SeriviceAttribute
}
var file_proto_mav_controller_outside_trjxgcs_proto_depIdxs = []int32{
	1,  // 0: trjxmavlink.GCToken.Result:type_name -> trjxmavlink.GCToken.Code
	28, // 1: trjxmavlink.TrjxVehicleMessage.Heartbeat:type_name -> trjxmavlink.Empty
	10, // 2: trjxmavlink.TrjxVehicleTelemetry.Position:type_name -> trjxmavlink.PositionDef
	11, // 3: trjxmavlink.TrjxVehicleTelemetry.Attitude:type_name -> trjxmavlink.AttitudeDef
	12, // 4: trjxmavlink.TrjxVehicleTelemetry.SysStatus:type_name -> trjxmavlink.SysStatusDef
	13, // 5: trjxmavlink.TrjxVehicleTelemetry.Battery:type_name -> trjxmavlink.BatteryStatusDef
	19, // 6: trjxmavlink.TrjxVehicleTelemetry.KeyValueTelemetry:type_name -> trjxmavlink.KeyValueTelemetryDef
	14, // 7: trjxmavlink.TrjxVehicleTelemetry.heartbeat:type_name -> trjxmavlink.HeartbeatDef
	2,  // 8: trjxmavlink.PositionDef.AltitudeAttr:type_name -> trjxmavlink.PositionDef.AltitudeAttrDef
	0,  // 9: trjxmavlink.HeartbeatDef.FlightState:type_name -> trjxmavlink.FlightStateType
	26, // 10: trjxmavlink.TrjxVehicleReceiveCommandHandling.Response:type_name -> trjxmavlink.TrjxVehicleReceiveCommandHandling.ResponseDef
	17, // 11: trjxmavlink.TrjxVehicleCommand.NotifyCollision:type_name -> trjxmavlink.Collision
	18, // 12: trjxmavlink.TrjxVehicleCommand.NotifyAvoidance:type_name -> trjxmavlink.Avoidance
	29, // 13: trjxmavlink.TrjxVehicleCommand.SetMission:type_name -> trjxmission.Mission
	29, // 14: trjxmavlink.TrjxVehicleCommand.SetMissionInFlight:type_name -> trjxmission.Mission
	20, // 15: trjxmavlink.TrjxVehicleCommand.ExecMission:type_name -> trjxmavlink.TVCExecMission
	21, // 16: trjxmavlink.TrjxVehicleCommand.Pause:type_name -> trjxmavlink.TVCPause
	22, // 17: trjxmavlink.TrjxVehicleCommand.Land:type_name -> trjxmavlink.TVCLand
	23, // 18: trjxmavlink.TrjxVehicleCommand.Arm:type_name -> trjxmavlink.TVCArm
	24, // 19: trjxmavlink.TrjxVehicleCommand.Takeoff:type_name -> trjxmavlink.TVCTakeoff
	25, // 20: trjxmavlink.TrjxVehicleCommand.Goto:type_name -> trjxmavlink.TVCGoto
	27, // 21: trjxmavlink.KeyValueTelemetryDef.Altitude:type_name -> trjxmavlink.KeyValueTelemetryDef.AltitudeElement
	30, // 22: trjxmavlink.TVCGoto.Altitude:type_name -> trjxmission.Altitude
	3,  // 23: trjxmavlink.TrjxVehicleReceiveCommandHandling.ResponseDef.Result:type_name -> trjxmavlink.TrjxVehicleReceiveCommandHandling.ResponseDef.ResultDef
	2,  // 24: trjxmavlink.KeyValueTelemetryDef.AltitudeElement.AltitudeAttr:type_name -> trjxmavlink.PositionDef.AltitudeAttrDef
	28, // 25: trjxmavlink.TrjxGcsService.GetSeriviceAttribute:input_type -> trjxmavlink.Empty
	4,  // 26: trjxmavlink.TrjxGcsService.Connect:input_type -> trjxmavlink.ConnectRequest
	6,  // 27: trjxmavlink.TrjxGcsService.Communicate:input_type -> trjxmavlink.TrjxVehicleMessage
	7,  // 28: trjxmavlink.TrjxGcsService.Request:input_type -> trjxmavlink.TrjxVehicleRequest
	9,  // 29: trjxmavlink.TrjxGcsService.Telemetry:input_type -> trjxmavlink.TrjxVehicleTelemetry
	15, // 30: trjxmavlink.TrjxGcsService.ReceiveCommand:input_type -> trjxmavlink.TrjxVehicleReceiveCommandHandling
	31, // 31: trjxmavlink.TrjxGcsService.GetSeriviceAttribute:output_type -> trjxmavlink.SeriviceAttribute
	5,  // 32: trjxmavlink.TrjxGcsService.Connect:output_type -> trjxmavlink.GCToken
	6,  // 33: trjxmavlink.TrjxGcsService.Communicate:output_type -> trjxmavlink.TrjxVehicleMessage
	8,  // 34: trjxmavlink.TrjxGcsService.Request:output_type -> trjxmavlink.TrjxVehicleResponse
	28, // 35: trjxmavlink.TrjxGcsService.Telemetry:output_type -> trjxmavlink.Empty
	16, // 36: trjxmavlink.TrjxGcsService.ReceiveCommand:output_type -> trjxmavlink.TrjxVehicleCommand
	31, // [31:37] is the sub-list for method output_type
	25, // [25:31] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_proto_mav_controller_outside_trjxgcs_proto_init() }
func file_proto_mav_controller_outside_trjxgcs_proto_init() {
	if File_proto_mav_controller_outside_trjxgcs_proto != nil {
		return
	}
	file_proto_mav_controller_outside_trjxcommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrjxVehicleMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrjxVehicleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrjxVehicleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrjxVehicleTelemetry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttitudeDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysStatusDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatteryStatusDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrjxVehicleReceiveCommandHandling); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrjxVehicleCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Avoidance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValueTelemetryDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVCExecMission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVCPause); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVCLand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVCArm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVCTakeoff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TVCGoto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrjxVehicleReceiveCommandHandling_ResponseDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValueTelemetryDef_AltitudeElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ConnectRequest_UserID)(nil),
		(*ConnectRequest_OrganizationID)(nil),
	}
	file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*TrjxVehicleMessage_Heartbeat)(nil),
	}
	file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*TrjxVehicleTelemetry_Position)(nil),
		(*TrjxVehicleTelemetry_Attitude)(nil),
		(*TrjxVehicleTelemetry_SysStatus)(nil),
		(*TrjxVehicleTelemetry_Battery)(nil),
		(*TrjxVehicleTelemetry_KeyValueTelemetry)(nil),
		(*TrjxVehicleTelemetry_Heartbeat)(nil),
	}
	file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*TrjxVehicleCommand_NotifyCollision)(nil),
		(*TrjxVehicleCommand_NotifyAvoidance)(nil),
		(*TrjxVehicleCommand_SetMission)(nil),
		(*TrjxVehicleCommand_SetMissionInFlight)(nil),
		(*TrjxVehicleCommand_ExecMission)(nil),
		(*TrjxVehicleCommand_Pause)(nil),
		(*TrjxVehicleCommand_Land)(nil),
		(*TrjxVehicleCommand_Arm)(nil),
		(*TrjxVehicleCommand_Takeoff)(nil),
		(*TrjxVehicleCommand_Goto)(nil),
	}
	file_proto_mav_controller_outside_trjxgcs_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*KeyValueTelemetryDef_Latitude)(nil),
		(*KeyValueTelemetryDef_Longitude)(nil),
		(*KeyValueTelemetryDef_Altitude)(nil),
		(*KeyValueTelemetryDef_Vx)(nil),
		(*KeyValueTelemetryDef_Vy)(nil),
		(*KeyValueTelemetryDef_Vz)(nil),
		(*KeyValueTelemetryDef_Heading)(nil),
		(*KeyValueTelemetryDef_Roll)(nil),
		(*KeyValueTelemetryDef_Pitch)(nil),
		(*KeyValueTelemetryDef_BatteryRemaining)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_mav_controller_outside_trjxgcs_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_mav_controller_outside_trjxgcs_proto_goTypes,
		DependencyIndexes: file_proto_mav_controller_outside_trjxgcs_proto_depIdxs,
		EnumInfos:         file_proto_mav_controller_outside_trjxgcs_proto_enumTypes,
		MessageInfos:      file_proto_mav_controller_outside_trjxgcs_proto_msgTypes,
	}.Build()
	File_proto_mav_controller_outside_trjxgcs_proto = out.File
	file_proto_mav_controller_outside_trjxgcs_proto_rawDesc = nil
	file_proto_mav_controller_outside_trjxgcs_proto_goTypes = nil
	file_proto_mav_controller_outside_trjxgcs_proto_depIdxs = nil
}
