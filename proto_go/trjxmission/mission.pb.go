// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: github.com/trajectoryjp/trjx-vehicle-api/proto/mav_controller_mission/mission.proto

package trjxmission

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 高度属性
type Altitude_AltitudeAttr int32

const (
	Altitude_ELLIPSOID Altitude_AltitudeAttr = 0 // 楕円球体高。MC未実装。
	Altitude_RELATIVE  Altitude_AltitudeAttr = 1 // 離陸地点を基準とする相対高度。
	Altitude_AGL       Altitude_AltitudeAttr = 2 // 地表面高度。MC未実装。
	Altitude_MSL       Altitude_AltitudeAttr = 3 // 海抜高度（標高）
)

// Enum value maps for Altitude_AltitudeAttr.
var (
	Altitude_AltitudeAttr_name = map[int32]string{
		0: "ELLIPSOID",
		1: "RELATIVE",
		2: "AGL",
		3: "MSL",
	}
	Altitude_AltitudeAttr_value = map[string]int32{
		"ELLIPSOID": 0,
		"RELATIVE":  1,
		"AGL":       2,
		"MSL":       3,
	}
)

func (x Altitude_AltitudeAttr) Enum() *Altitude_AltitudeAttr {
	p := new(Altitude_AltitudeAttr)
	*p = x
	return p
}

func (x Altitude_AltitudeAttr) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Altitude_AltitudeAttr) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_enumTypes[0].Descriptor()
}

func (Altitude_AltitudeAttr) Type() protoreflect.EnumType {
	return &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_enumTypes[0]
}

func (x Altitude_AltitudeAttr) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Altitude_AltitudeAttr.Descriptor instead.
func (Altitude_AltitudeAttr) EnumDescriptor() ([]byte, []int) {
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescGZIP(), []int{2, 0}
}

// 着陸種別
type ItemParameter_Land_LandMode int32

const (
	ItemParameter_Land_Current ItemParameter_Land_LandMode = 0 // 現在地点で着陸する。
	ItemParameter_Land_RTL     ItemParameter_Land_LandMode = 1 // RTLに指定された位置（離陸地点）へ着陸する。
)

// Enum value maps for ItemParameter_Land_LandMode.
var (
	ItemParameter_Land_LandMode_name = map[int32]string{
		0: "Current",
		1: "RTL",
	}
	ItemParameter_Land_LandMode_value = map[string]int32{
		"Current": 0,
		"RTL":     1,
	}
)

func (x ItemParameter_Land_LandMode) Enum() *ItemParameter_Land_LandMode {
	p := new(ItemParameter_Land_LandMode)
	*p = x
	return p
}

func (x ItemParameter_Land_LandMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemParameter_Land_LandMode) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_enumTypes[1].Descriptor()
}

func (ItemParameter_Land_LandMode) Type() protoreflect.EnumType {
	return &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_enumTypes[1]
}

func (x ItemParameter_Land_LandMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemParameter_Land_LandMode.Descriptor instead.
func (ItemParameter_Land_LandMode) EnumDescriptor() ([]byte, []int) {
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescGZIP(), []int{5, 0}
}

type CameraControl_PictureControl int32

const (
	CameraControl_PICTURE_SHUTTER CameraControl_PictureControl = 0
)

// Enum value maps for CameraControl_PictureControl.
var (
	CameraControl_PictureControl_name = map[int32]string{
		0: "PICTURE_SHUTTER",
	}
	CameraControl_PictureControl_value = map[string]int32{
		"PICTURE_SHUTTER": 0,
	}
)

func (x CameraControl_PictureControl) Enum() *CameraControl_PictureControl {
	p := new(CameraControl_PictureControl)
	*p = x
	return p
}

func (x CameraControl_PictureControl) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CameraControl_PictureControl) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_enumTypes[2].Descriptor()
}

func (CameraControl_PictureControl) Type() protoreflect.EnumType {
	return &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_enumTypes[2]
}

func (x CameraControl_PictureControl) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CameraControl_PictureControl.Descriptor instead.
func (CameraControl_PictureControl) EnumDescriptor() ([]byte, []int) {
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescGZIP(), []int{7, 0}
}

type CameraControl_MovieControl int32

const (
	CameraControl_MOVIE_START CameraControl_MovieControl = 0
	CameraControl_MOVIE_STOP  CameraControl_MovieControl = 1
)

// Enum value maps for CameraControl_MovieControl.
var (
	CameraControl_MovieControl_name = map[int32]string{
		0: "MOVIE_START",
		1: "MOVIE_STOP",
	}
	CameraControl_MovieControl_value = map[string]int32{
		"MOVIE_START": 0,
		"MOVIE_STOP":  1,
	}
)

func (x CameraControl_MovieControl) Enum() *CameraControl_MovieControl {
	p := new(CameraControl_MovieControl)
	*p = x
	return p
}

func (x CameraControl_MovieControl) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CameraControl_MovieControl) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_enumTypes[3].Descriptor()
}

func (CameraControl_MovieControl) Type() protoreflect.EnumType {
	return &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_enumTypes[3]
}

func (x CameraControl_MovieControl) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CameraControl_MovieControl.Descriptor instead.
func (CameraControl_MovieControl) EnumDescriptor() ([]byte, []int) {
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescGZIP(), []int{7, 1}
}

type CameraControl_EnumImageMode int32

const (
	CameraControl_MOVIE_MODE   CameraControl_EnumImageMode = 0
	CameraControl_PICTURE_MODE CameraControl_EnumImageMode = 1
)

// Enum value maps for CameraControl_EnumImageMode.
var (
	CameraControl_EnumImageMode_name = map[int32]string{
		0: "MOVIE_MODE",
		1: "PICTURE_MODE",
	}
	CameraControl_EnumImageMode_value = map[string]int32{
		"MOVIE_MODE":   0,
		"PICTURE_MODE": 1,
	}
)

func (x CameraControl_EnumImageMode) Enum() *CameraControl_EnumImageMode {
	p := new(CameraControl_EnumImageMode)
	*p = x
	return p
}

func (x CameraControl_EnumImageMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CameraControl_EnumImageMode) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_enumTypes[4].Descriptor()
}

func (CameraControl_EnumImageMode) Type() protoreflect.EnumType {
	return &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_enumTypes[4]
}

func (x CameraControl_EnumImageMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CameraControl_EnumImageMode.Descriptor instead.
func (CameraControl_EnumImageMode) EnumDescriptor() ([]byte, []int) {
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescGZIP(), []int{7, 2}
}

type CameraControl_EnumRayMode int32

const (
	CameraControl_VISIBLE  CameraControl_EnumRayMode = 0 // 可視光映像
	CameraControl_INFRARED CameraControl_EnumRayMode = 1 // 赤外線映像
)

// Enum value maps for CameraControl_EnumRayMode.
var (
	CameraControl_EnumRayMode_name = map[int32]string{
		0: "VISIBLE",
		1: "INFRARED",
	}
	CameraControl_EnumRayMode_value = map[string]int32{
		"VISIBLE":  0,
		"INFRARED": 1,
	}
)

func (x CameraControl_EnumRayMode) Enum() *CameraControl_EnumRayMode {
	p := new(CameraControl_EnumRayMode)
	*p = x
	return p
}

func (x CameraControl_EnumRayMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CameraControl_EnumRayMode) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_enumTypes[5].Descriptor()
}

func (CameraControl_EnumRayMode) Type() protoreflect.EnumType {
	return &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_enumTypes[5]
}

func (x CameraControl_EnumRayMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CameraControl_EnumRayMode.Descriptor instead.
func (CameraControl_EnumRayMode) EnumDescriptor() ([]byte, []int) {
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescGZIP(), []int{7, 3}
}

// MissionItemのリスト
type Mission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemsArray []*MissionItem `protobuf:"bytes,1,rep,name=itemsArray,proto3" json:"itemsArray,omitempty"` // ミッションのリスト
}

func (x *Mission) Reset() {
	*x = Mission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mission) ProtoMessage() {}

func (x *Mission) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mission.ProtoReflect.Descriptor instead.
func (*Mission) Descriptor() ([]byte, []int) {
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescGZIP(), []int{0}
}

func (x *Mission) GetItemsArray() []*MissionItem {
	if x != nil {
		return x.ItemsArray
	}
	return nil
}

// MissionItem（ミッションの構成要素）
type MissionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"` // tag名。MissionCurrentの通知パラメータ。
	// ミッションの種類毎のミッション設定情報
	//
	// Types that are assignable to ItemParameter:
	//	*MissionItem_Takeoff
	//	*MissionItem_Waypoint
	//	*MissionItem_Land
	ItemParameter isMissionItem_ItemParameter `protobuf_oneof:"ItemParameter"`
}

func (x *MissionItem) Reset() {
	*x = MissionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissionItem) ProtoMessage() {}

func (x *MissionItem) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissionItem.ProtoReflect.Descriptor instead.
func (*MissionItem) Descriptor() ([]byte, []int) {
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescGZIP(), []int{1}
}

func (x *MissionItem) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (m *MissionItem) GetItemParameter() isMissionItem_ItemParameter {
	if m != nil {
		return m.ItemParameter
	}
	return nil
}

func (x *MissionItem) GetTakeoff() *ItemParameter_Takeoff {
	if x, ok := x.GetItemParameter().(*MissionItem_Takeoff); ok {
		return x.Takeoff
	}
	return nil
}

func (x *MissionItem) GetWaypoint() *ItemParameter_Waypoint {
	if x, ok := x.GetItemParameter().(*MissionItem_Waypoint); ok {
		return x.Waypoint
	}
	return nil
}

func (x *MissionItem) GetLand() *ItemParameter_Land {
	if x, ok := x.GetItemParameter().(*MissionItem_Land); ok {
		return x.Land
	}
	return nil
}

type isMissionItem_ItemParameter interface {
	isMissionItem_ItemParameter()
}

type MissionItem_Takeoff struct {
	Takeoff *ItemParameter_Takeoff `protobuf:"bytes,11,opt,name=takeoff,proto3,oneof"` // 離陸
}

type MissionItem_Waypoint struct {
	Waypoint *ItemParameter_Waypoint `protobuf:"bytes,12,opt,name=waypoint,proto3,oneof"` // Waypoint（通過点）
}

type MissionItem_Land struct {
	Land *ItemParameter_Land `protobuf:"bytes,13,opt,name=land,proto3,oneof"` // 着陸
}

func (*MissionItem_Takeoff) isMissionItem_ItemParameter() {}

func (*MissionItem_Waypoint) isMissionItem_ItemParameter() {}

func (*MissionItem_Land) isMissionItem_ItemParameter() {}

type Altitude struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attr     Altitude_AltitudeAttr `protobuf:"varint,1,opt,name=attr,proto3,enum=trjxmission.Altitude_AltitudeAttr" json:"attr,omitempty"`
	Altitude float32               `protobuf:"fixed32,2,opt,name=altitude,proto3" json:"altitude,omitempty"`
}

func (x *Altitude) Reset() {
	*x = Altitude{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Altitude) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Altitude) ProtoMessage() {}

func (x *Altitude) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Altitude.ProtoReflect.Descriptor instead.
func (*Altitude) Descriptor() ([]byte, []int) {
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescGZIP(), []int{2}
}

func (x *Altitude) GetAttr() Altitude_AltitudeAttr {
	if x != nil {
		return x.Attr
	}
	return Altitude_ELLIPSOID
}

func (x *Altitude) GetAltitude() float32 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

// 離陸を実行する。
type ItemParameter_Takeoff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 離陸後に到達する高度
	Altitude *Altitude `protobuf:"bytes,1,opt,name=altitude,proto3" json:"altitude,omitempty"`
}

func (x *ItemParameter_Takeoff) Reset() {
	*x = ItemParameter_Takeoff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemParameter_Takeoff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemParameter_Takeoff) ProtoMessage() {}

func (x *ItemParameter_Takeoff) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemParameter_Takeoff.ProtoReflect.Descriptor instead.
func (*ItemParameter_Takeoff) Descriptor() ([]byte, []int) {
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescGZIP(), []int{3}
}

func (x *ItemParameter_Takeoff) GetAltitude() *Altitude {
	if x != nil {
		return x.Altitude
	}
	return nil
}

// 指定の座標のWaypointへ向かう
type ItemParameter_Waypoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 高度
	Altitude *Altitude `protobuf:"bytes,1,opt,name=altitude,proto3" json:"altitude,omitempty"`
	// 緯度
	Latitude float64 `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// 経度
	Longitude float64 `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	// ROI
	Roi *ROI `protobuf:"bytes,4,opt,name=roi,proto3" json:"roi,omitempty"`
	// Camera
	CameraControl *CameraControl `protobuf:"bytes,5,opt,name=cameraControl,proto3" json:"cameraControl,omitempty"`
	// Types that are assignable to CameraOption:
	//	*ItemParameter_Waypoint_ShootIntervalDistance
	//	*ItemParameter_Waypoint_ShootIntervalTime
	CameraOption isItemParameter_Waypoint_CameraOption `protobuf_oneof:"CameraOption"`
	// trueで無限pause（再開メッセージを受けるまで）
	Pause bool `protobuf:"varint,10,opt,name=pause,proto3" json:"pause,omitempty"`
	// pauseがfalseの場合のみ有効。秒
	Holdtime *float32 `protobuf:"fixed32,11,opt,name=holdtime,proto3,oneof" json:"holdtime,omitempty"`
	// ヘディング 機首方向（北0度、東90度）
	Heading *float32 `protobuf:"fixed32,12,opt,name=heading,proto3,oneof" json:"heading,omitempty"`
	// スピード（本WP通過後の速度）
	Speed *float32 `protobuf:"fixed32,13,opt,name=speed,proto3,oneof" json:"speed,omitempty"` // m/s
}

func (x *ItemParameter_Waypoint) Reset() {
	*x = ItemParameter_Waypoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemParameter_Waypoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemParameter_Waypoint) ProtoMessage() {}

func (x *ItemParameter_Waypoint) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemParameter_Waypoint.ProtoReflect.Descriptor instead.
func (*ItemParameter_Waypoint) Descriptor() ([]byte, []int) {
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescGZIP(), []int{4}
}

func (x *ItemParameter_Waypoint) GetAltitude() *Altitude {
	if x != nil {
		return x.Altitude
	}
	return nil
}

func (x *ItemParameter_Waypoint) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *ItemParameter_Waypoint) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *ItemParameter_Waypoint) GetRoi() *ROI {
	if x != nil {
		return x.Roi
	}
	return nil
}

func (x *ItemParameter_Waypoint) GetCameraControl() *CameraControl {
	if x != nil {
		return x.CameraControl
	}
	return nil
}

func (m *ItemParameter_Waypoint) GetCameraOption() isItemParameter_Waypoint_CameraOption {
	if m != nil {
		return m.CameraOption
	}
	return nil
}

func (x *ItemParameter_Waypoint) GetShootIntervalDistance() float32 {
	if x, ok := x.GetCameraOption().(*ItemParameter_Waypoint_ShootIntervalDistance); ok {
		return x.ShootIntervalDistance
	}
	return 0
}

func (x *ItemParameter_Waypoint) GetShootIntervalTime() int32 {
	if x, ok := x.GetCameraOption().(*ItemParameter_Waypoint_ShootIntervalTime); ok {
		return x.ShootIntervalTime
	}
	return 0
}

func (x *ItemParameter_Waypoint) GetPause() bool {
	if x != nil {
		return x.Pause
	}
	return false
}

func (x *ItemParameter_Waypoint) GetHoldtime() float32 {
	if x != nil && x.Holdtime != nil {
		return *x.Holdtime
	}
	return 0
}

func (x *ItemParameter_Waypoint) GetHeading() float32 {
	if x != nil && x.Heading != nil {
		return *x.Heading
	}
	return 0
}

func (x *ItemParameter_Waypoint) GetSpeed() float32 {
	if x != nil && x.Speed != nil {
		return *x.Speed
	}
	return 0
}

type isItemParameter_Waypoint_CameraOption interface {
	isItemParameter_Waypoint_CameraOption()
}

type ItemParameter_Waypoint_ShootIntervalDistance struct {
	ShootIntervalDistance float32 `protobuf:"fixed32,6,opt,name=shootIntervalDistance,proto3,oneof"` // 写真の撮影間隔（m）。0以下で停止。
}

type ItemParameter_Waypoint_ShootIntervalTime struct {
	ShootIntervalTime int32 `protobuf:"varint,7,opt,name=shootIntervalTime,proto3,oneof"` // 写真の撮影間隔（秒）。0以下で停止。
}

func (*ItemParameter_Waypoint_ShootIntervalDistance) isItemParameter_Waypoint_CameraOption() {}

func (*ItemParameter_Waypoint_ShootIntervalTime) isItemParameter_Waypoint_CameraOption() {}

// 着陸を実行する
// 最終ポイントで本Itemを指定しない場合はDefaultの動作になる
// RTLを指定した場合はRTLが変わるごとに自動でルートが変更される（未実装）
type ItemParameter_Land struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode ItemParameter_Land_LandMode `protobuf:"varint,1,opt,name=mode,proto3,enum=trjxmission.ItemParameter_Land_LandMode" json:"mode,omitempty"`
}

func (x *ItemParameter_Land) Reset() {
	*x = ItemParameter_Land{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemParameter_Land) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemParameter_Land) ProtoMessage() {}

func (x *ItemParameter_Land) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemParameter_Land.ProtoReflect.Descriptor instead.
func (*ItemParameter_Land) Descriptor() ([]byte, []int) {
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescGZIP(), []int{5}
}

func (x *ItemParameter_Land) GetMode() ItemParameter_Land_LandMode {
	if x != nil {
		return x.Mode
	}
	return ItemParameter_Land_Current
}

// ROI座標
type ROI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ROIの高度
	Altitude *Altitude `protobuf:"bytes,1,opt,name=altitude,proto3" json:"altitude,omitempty"`
	// ROIの緯度
	Latitude float64 `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// ROIの経度
	Longitude float64 `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *ROI) Reset() {
	*x = ROI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ROI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ROI) ProtoMessage() {}

func (x *ROI) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ROI.ProtoReflect.Descriptor instead.
func (*ROI) Descriptor() ([]byte, []int) {
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescGZIP(), []int{6}
}

func (x *ROI) GetAltitude() *Altitude {
	if x != nil {
		return x.Altitude
	}
	return nil
}

func (x *ROI) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *ROI) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

// カメラ操作 // TR_DEV-157
type CameraControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pitch     *float32                      `protobuf:"fixed32,1,opt,name=pitch,proto3,oneof" json:"pitch,omitempty"` // ジンバル角度。水平0度、真上-90度、真下90度
	Yaw       *float32                      `protobuf:"fixed32,2,opt,name=yaw,proto3,oneof" json:"yaw,omitempty"`     // 水平方向角度(-180°〜180°) 機首方向0°。右方向が+
	Picture   *CameraControl_PictureControl `protobuf:"varint,3,opt,name=picture,proto3,enum=trjxmission.CameraControl_PictureControl,oneof" json:"picture,omitempty"`
	Movie     *CameraControl_MovieControl   `protobuf:"varint,4,opt,name=movie,proto3,enum=trjxmission.CameraControl_MovieControl,oneof" json:"movie,omitempty"`
	Zoom      *float32                      `protobuf:"fixed32,5,opt,name=zoom,proto3,oneof" json:"zoom,omitempty"`                                                       // 拡大率
	ImageMode *CameraControl_EnumImageMode  `protobuf:"varint,6,opt,name=imageMode,proto3,enum=trjxmission.CameraControl_EnumImageMode,oneof" json:"imageMode,omitempty"` // 当面対象外
	RayMode   *CameraControl_EnumRayMode    `protobuf:"varint,7,opt,name=rayMode,proto3,enum=trjxmission.CameraControl_EnumRayMode,oneof" json:"rayMode,omitempty"`       // 当面対象外
}

func (x *CameraControl) Reset() {
	*x = CameraControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CameraControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CameraControl) ProtoMessage() {}

func (x *CameraControl) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CameraControl.ProtoReflect.Descriptor instead.
func (*CameraControl) Descriptor() ([]byte, []int) {
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescGZIP(), []int{7}
}

func (x *CameraControl) GetPitch() float32 {
	if x != nil && x.Pitch != nil {
		return *x.Pitch
	}
	return 0
}

func (x *CameraControl) GetYaw() float32 {
	if x != nil && x.Yaw != nil {
		return *x.Yaw
	}
	return 0
}

func (x *CameraControl) GetPicture() CameraControl_PictureControl {
	if x != nil && x.Picture != nil {
		return *x.Picture
	}
	return CameraControl_PICTURE_SHUTTER
}

func (x *CameraControl) GetMovie() CameraControl_MovieControl {
	if x != nil && x.Movie != nil {
		return *x.Movie
	}
	return CameraControl_MOVIE_START
}

func (x *CameraControl) GetZoom() float32 {
	if x != nil && x.Zoom != nil {
		return *x.Zoom
	}
	return 0
}

func (x *CameraControl) GetImageMode() CameraControl_EnumImageMode {
	if x != nil && x.ImageMode != nil {
		return *x.ImageMode
	}
	return CameraControl_MOVIE_MODE
}

func (x *CameraControl) GetRayMode() CameraControl_EnumRayMode {
	if x != nil && x.RayMode != nil {
		return *x.RayMode
	}
	return CameraControl_VISIBLE
}

var File_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto protoreflect.FileDescriptor

var file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDesc = []byte{
	0x0a, 0x53, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x6a, 0x70, 0x2f, 0x74, 0x72, 0x6a, 0x78, 0x2d, 0x76,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6d, 0x61, 0x76, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x43, 0x0a, 0x07, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a,
	0x0a, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x22, 0xea, 0x01, 0x0a, 0x0b, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x3e, 0x0a, 0x07, 0x74, 0x61, 0x6b,
	0x65, 0x6f, 0x66, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x6a,
	0x78, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x54, 0x61, 0x6b, 0x65, 0x6f, 0x66, 0x66, 0x48, 0x00,
	0x52, 0x07, 0x74, 0x61, 0x6b, 0x65, 0x6f, 0x66, 0x66, 0x12, 0x41, 0x0a, 0x08, 0x77, 0x61, 0x79,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x72,
	0x6a, 0x78, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x08, 0x77, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x04,
	0x6c, 0x61, 0x6e, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x72, 0x6a,
	0x78, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x4c, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x04, 0x6c,
	0x61, 0x6e, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x22, 0x9d, 0x01, 0x0a, 0x08, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6c,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x2e, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6c, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x61, 0x6c, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x3d, 0x0a, 0x0c, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x41, 0x74, 0x74, 0x72, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x4c, 0x4c, 0x49, 0x50, 0x53, 0x4f,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x56, 0x45,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x47, 0x4c, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x4d,
	0x53, 0x4c, 0x10, 0x03, 0x22, 0x4a, 0x0a, 0x15, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x54, 0x61, 0x6b, 0x65, 0x6f, 0x66, 0x66, 0x12, 0x31, 0x0a,
	0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6c,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x52, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x22, 0xf7, 0x03, 0x0a, 0x16, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x5f, 0x57, 0x61, 0x79, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x61,
	0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x74, 0x72, 0x6a, 0x78, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6c, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x52, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x03, 0x72, 0x6f, 0x69, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x4f, 0x49, 0x52, 0x03, 0x72, 0x6f, 0x69, 0x12, 0x40, 0x0a, 0x0d,
	0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52,
	0x0d, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x36,
	0x0a, 0x15, 0x73, 0x68, 0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x44,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52,
	0x15, 0x73, 0x68, 0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x44, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x6f, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x11, 0x73, 0x68, 0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x08,
	0x68, 0x6f, 0x6c, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x48, 0x01,
	0x52, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x07, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x48, 0x02,
	0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x48, 0x03, 0x52, 0x05, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x43, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x68, 0x6f, 0x6c, 0x64,
	0x74, 0x69, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x22, 0x74, 0x0a, 0x12, 0x49, 0x74,
	0x65, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x4c, 0x61, 0x6e, 0x64,
	0x12, 0x3c, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28,
	0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x4c, 0x61, 0x6e, 0x64, 0x2e,
	0x4c, 0x61, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x20,
	0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x54, 0x4c, 0x10, 0x01,
	0x22, 0x72, 0x0a, 0x03, 0x52, 0x4f, 0x49, 0x12, 0x31, 0x0a, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x72, 0x6a, 0x78,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x52, 0x08, 0x61, 0x6c, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x22, 0xfc, 0x04, 0x0a, 0x0d, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x88, 0x01,
	0x01, 0x12, 0x15, 0x0a, 0x03, 0x79, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x48, 0x01,
	0x52, 0x03, 0x79, 0x61, 0x77, 0x88, 0x01, 0x01, 0x12, 0x48, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x74, 0x72, 0x6a, 0x78,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x48, 0x02, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x42, 0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x03, 0x52, 0x05, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x7a, 0x6f, 0x6f, 0x6d, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x48, 0x04, 0x52, 0x04, 0x7a, 0x6f, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12,
	0x4b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x28, 0x2e, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x45,
	0x6e, 0x75, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x48, 0x05, 0x52, 0x09,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x07,
	0x72, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e,
	0x74, 0x72, 0x6a, 0x78, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x61,
	0x79, 0x4d, 0x6f, 0x64, 0x65, 0x48, 0x06, 0x52, 0x07, 0x72, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x22, 0x25, 0x0a, 0x0e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45,
	0x5f, 0x53, 0x48, 0x55, 0x54, 0x54, 0x45, 0x52, 0x10, 0x00, 0x22, 0x2f, 0x0a, 0x0c, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x4f,
	0x56, 0x49, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4d,
	0x4f, 0x56, 0x49, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x01, 0x22, 0x31, 0x0a, 0x0d, 0x45,
	0x6e, 0x75, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x0a,
	0x4d, 0x4f, 0x56, 0x49, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c,
	0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0x01, 0x22, 0x28,
	0x0a, 0x0b, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x56, 0x49, 0x53, 0x49, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e,
	0x46, 0x52, 0x41, 0x52, 0x45, 0x44, 0x10, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x69, 0x74,
	0x63, 0x68, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x79, 0x61, 0x77, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x7a, 0x6f, 0x6f, 0x6d, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x61, 0x79, 0x4d,
	0x6f, 0x64, 0x65, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x6a, 0x70, 0x2f, 0x74,
	0x72, 0x6a, 0x78, 0x2d, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x67, 0x6f, 0x2f, 0x74, 0x72, 0x6a, 0x78, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescOnce sync.Once
	file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescData = file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDesc
)

func file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescGZIP() []byte {
	file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescOnce.Do(func() {
		file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescData)
	})
	return file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDescData
}

var file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_goTypes = []interface{}{
	(Altitude_AltitudeAttr)(0),        // 0: trjxmission.Altitude.AltitudeAttr
	(ItemParameter_Land_LandMode)(0),  // 1: trjxmission.ItemParameter_Land.LandMode
	(CameraControl_PictureControl)(0), // 2: trjxmission.CameraControl.PictureControl
	(CameraControl_MovieControl)(0),   // 3: trjxmission.CameraControl.MovieControl
	(CameraControl_EnumImageMode)(0),  // 4: trjxmission.CameraControl.EnumImageMode
	(CameraControl_EnumRayMode)(0),    // 5: trjxmission.CameraControl.EnumRayMode
	(*Mission)(nil),                   // 6: trjxmission.Mission
	(*MissionItem)(nil),               // 7: trjxmission.MissionItem
	(*Altitude)(nil),                  // 8: trjxmission.Altitude
	(*ItemParameter_Takeoff)(nil),     // 9: trjxmission.ItemParameter_Takeoff
	(*ItemParameter_Waypoint)(nil),    // 10: trjxmission.ItemParameter_Waypoint
	(*ItemParameter_Land)(nil),        // 11: trjxmission.ItemParameter_Land
	(*ROI)(nil),                       // 12: trjxmission.ROI
	(*CameraControl)(nil),             // 13: trjxmission.CameraControl
}
var file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_depIdxs = []int32{
	7,  // 0: trjxmission.Mission.itemsArray:type_name -> trjxmission.MissionItem
	9,  // 1: trjxmission.MissionItem.takeoff:type_name -> trjxmission.ItemParameter_Takeoff
	10, // 2: trjxmission.MissionItem.waypoint:type_name -> trjxmission.ItemParameter_Waypoint
	11, // 3: trjxmission.MissionItem.land:type_name -> trjxmission.ItemParameter_Land
	0,  // 4: trjxmission.Altitude.attr:type_name -> trjxmission.Altitude.AltitudeAttr
	8,  // 5: trjxmission.ItemParameter_Takeoff.altitude:type_name -> trjxmission.Altitude
	8,  // 6: trjxmission.ItemParameter_Waypoint.altitude:type_name -> trjxmission.Altitude
	12, // 7: trjxmission.ItemParameter_Waypoint.roi:type_name -> trjxmission.ROI
	13, // 8: trjxmission.ItemParameter_Waypoint.cameraControl:type_name -> trjxmission.CameraControl
	1,  // 9: trjxmission.ItemParameter_Land.mode:type_name -> trjxmission.ItemParameter_Land.LandMode
	8,  // 10: trjxmission.ROI.altitude:type_name -> trjxmission.Altitude
	2,  // 11: trjxmission.CameraControl.picture:type_name -> trjxmission.CameraControl.PictureControl
	3,  // 12: trjxmission.CameraControl.movie:type_name -> trjxmission.CameraControl.MovieControl
	4,  // 13: trjxmission.CameraControl.imageMode:type_name -> trjxmission.CameraControl.EnumImageMode
	5,  // 14: trjxmission.CameraControl.rayMode:type_name -> trjxmission.CameraControl.EnumRayMode
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() {
	file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_init()
}
func file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_init() {
	if File_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Altitude); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemParameter_Takeoff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemParameter_Waypoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemParameter_Land); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ROI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CameraControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*MissionItem_Takeoff)(nil),
		(*MissionItem_Waypoint)(nil),
		(*MissionItem_Land)(nil),
	}
	file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*ItemParameter_Waypoint_ShootIntervalDistance)(nil),
		(*ItemParameter_Waypoint_ShootIntervalTime)(nil),
	}
	file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_goTypes,
		DependencyIndexes: file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_depIdxs,
		EnumInfos:         file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_enumTypes,
		MessageInfos:      file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_msgTypes,
	}.Build()
	File_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto = out.File
	file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_rawDesc = nil
	file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_goTypes = nil
	file_github_com_trajectoryjp_trjx_vehicle_api_proto_mav_controller_mission_mission_proto_depIdxs = nil
}
